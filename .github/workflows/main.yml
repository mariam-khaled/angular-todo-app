name: ci/cd

on:
  push:
    branches: master
    tags:
       - 'v*'

jobs:
  workflow:
    runs-on: ubuntu-latest
    steps:
    - name: Check-out
      uses: actions/checkout@v2
    
    - name: Set up Qemu
      uses: docker/setup-qemu-action@v1
      
    - name: Setup build-x
      uses: docker/setup-buildx-action@v1
      with:
        driver: docker
        
    - name: Login to dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build, Test and Push image to dockerhub 
      uses: docker/build-push-action@v2
      with:
        context: .
        tags: mariamkhaled/webapp:latest
        #load: true
        push: true
        
    - name: Upload artifact
      uses: ishworkh/docker-image-artifact-upload@v1
      with:
        image: "mariamkhaled/webapp:latest"
        expiration: 4m
    
    - name: Tag
      id: autotagger
      uses: butlerlogic/action-autotag@stable
      with:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        strategy: package
    
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3 
      with:
        token: ${{secrets.GITHUB_TOKEN}} 
    
    - name: Create release
      if: steps.autotagger.outputs.tagname != ''
      id: create_release
      uses: actions/create-release@v1
      #uses: marvinpinto/action-automatic-releases@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ steps.autotagger.outputs.tagname }}
        release_name: Version ${{ steps.autotagger.outputs.version }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
        
    - name: Publish
      #id: publish_npm
      #if: steps.autotagger.outputs.tagname != ''
      #uses: author/action-publish@stable
      uses: StuYarrow/publish-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          #id: ${{ steps.buildnumber.outputs.build_number }}
          id: "${{ steps.previous_step.outputs.version }}"
      #uses: actions/setup-node@v1
      #with:
        #node-version: '12.x'
        #registry-url: 'https://registry.npmjs.org'
    #- run: npm install
    #- run: npm publish
      #env:
        #REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

    - name: Rollback Release
      if: failure() && steps.create_release.outputs.id != ''
      uses: author/action-rollback@stable
      with:
        # Using a known release ID
        id: ${{ steps.create_release.id }}
        # Using a tag name
        tag: ${{ steps.autotagger.outputs.tagname }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    
